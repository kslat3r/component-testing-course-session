{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-03T16:15:29.051Z",
    "end": "2020-05-03T16:15:29.114Z",
    "duration": 63,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ed2a86c9-1ec0-4bf6-9d38-6a958b35093f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ca1aa690-9b50-4017-b6b5-55106d1113b3",
          "title": "GET /api/users/:userId",
          "fullFile": "/opt/app/tests/user-get.spec.js",
          "file": "/tests/user-get.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return the correct response if downstream system returns response",
              "fullTitle": "GET /api/users/:userId should return the correct response if downstream system returns response",
              "timedOut": false,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "supertest(server)\n  .get('/api/users/1')\n  .expect(200)\n  .end((error, response) => {\n    expect(error).to.equal(null);\n    expect(response.body).to.deep.equal(expectedResponse);\n    return done();\n  });",
              "err": {},
              "uuid": "764596b4-8bf2-4bfe-874e-4a759c1bf0ae",
              "parentUUID": "ca1aa690-9b50-4017-b6b5-55106d1113b3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "764596b4-8bf2-4bfe-874e-4a759c1bf0ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 44,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        },
        {
          "uuid": "af7a49b4-d48a-45d7-ba3c-c6865799a1fa",
          "title": "GET /api/users",
          "fullFile": "/opt/app/tests/user-list.spec.js",
          "file": "/tests/user-list.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return the correct response if downstream system returns response",
              "fullTitle": "GET /api/users should return the correct response if downstream system returns response",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "supertest(server)\n  .get('/api/users')\n  .expect(200)\n  .end((error, response) => {\n    expect(error).to.equal(null);\n    expect(response.body).to.deep.equal(expectedResponse);\n    return done();\n  });",
              "err": {},
              "uuid": "d41c0377-67d1-4a3c-9471-78c8063b48c4",
              "parentUUID": "af7a49b4-d48a-45d7-ba3c-c6865799a1fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d41c0377-67d1-4a3c-9471-78c8063b48c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 100000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 100000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mocha-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {},
      "version": "4.1.0"
    }
  }
}